#!/usr/bin/python3
from os import read
import sys
import os.path


def main():
    arg = sys.argv  
    validate_fs(arg[2])
    arg_len = len(arg) - 1
    
    if arg_len == 4:
        if arg[1].lower() == 'copyin':
            copyin(arg[2], arg[3], arg[4])



class File_Note:
    def __init__(self, directory):
        self.dir = directory
        self.notes = []
        
    

    

def copyin(fs_name, external_file, interal_file):
    

    check_file(external_file)
        

    return 0

#
def check_file(file_name):
    boolen = False
    
    if not file_name.find("/"):
        
        path = "./" + file_name 
    else:
        
        path = file_name
        
    stderr = sys.stderr

    if not os.path.isfile(path):

        stderr.write("Error code 1: No such file or directory \n")
        return False
    
    boolean = os.path.isfile(path)

    return boolean
    
#this method validates the file system inputted
def validate_fs(file_system):
    stderr = sys.stderr
    name = file_system + ".notes"
    directories = []
    base_dir = "root"
    read_files = []
    files = []
    if not os.path.isfile(name):
        
        stderr.write("Error code 1: No such file or directory \n")
        return -1
    

    with open(name) as f:
        in_file = False
        
        lines = f.readlines()
        
        if lines[0].strip() != "NOTES V1.0":
            stderr.write("Error code 1: Invalid filesystem format \n")
            return -1 

        del lines[0]
        
        for line in lines:
            if line[0] == "@" :
                #Check if there is a directory associated
                file_entry = line[1:].strip()
                if file_entry.find("/") > 0:
                    file_entry = file_entry.rsplit('/',1)
                    
                    if file_entry[0] not in directories:
                        print(f"Error code 1: Invalid directory, {file_entry[0]}")

                    print(file_entry)
                  
                if in_file == False and line[1:].strip() not in read_files:
                    
                    print(f"started_reading file {line[1:]}")
                    in_file = True
                    files.append(File_Note(base_dir))
                    read_files.append(line[1:].strip())
                elif in_file == False and line[1:].strip() in read_files:
                    print(f"invalid, already read {line[1:].strip()}")
                else:
                    in_file = False

            if line[0] == " " and in_file:
                files[-1].notes.append(line[1:])
            
            if line[0] == "=" and line.strip()[-1] == "/":
                dir_name = line[1:]
                dir_name = dir_name[:-1]
                dir_name = dir_name[:-1]
                print(f"directory {dir_name}")
                directories.append(dir_name)
                in_file = False
                
            print(read_files)


                
                

                    

            
            

    return 0



if __name__ == "__main__":
    main()


    

